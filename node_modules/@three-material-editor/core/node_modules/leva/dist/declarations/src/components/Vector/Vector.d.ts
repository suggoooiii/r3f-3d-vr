/// <reference types="react" />
import type { VectorProps } from './vector-types';
export declare const Container: import("@stitches/react").StitchesComponentWithAutoCompleteForJSXElements<"div", {
    withLock: {
        true: any;
    };
}, import("@stitches/core").TConditions & {
    initial: "";
}, {
    colors: {
        leva__elevation1: string;
        leva__elevation2: string;
        leva__elevation3: string;
        leva__accent1: string;
        leva__accent2: string;
        leva__accent3: string;
        leva__highlight1: string;
        leva__highlight2: string;
        leva__highlight3: string;
        leva__toolTipBackground: string;
        leva__toolTipText: string;
    };
    radii: {
        leva__xs: string;
        leva__sm: string;
        leva__lg: string;
    };
    space: {
        leva__xs: string;
        leva__sm: string;
        leva__md: string;
        leva__rowGap: string;
        leva__colGap: string;
    };
    fonts: {
        leva__mono: string;
        leva__sans: string;
    };
    fontSizes: {
        leva__root: string;
        leva__toolTip: string;
    };
    sizes: {
        leva__rootWidth: string;
        leva__controlWidth: string;
        leva__numberInputMinWidth: string;
        leva__scrubberWidth: string;
        leva__scrubberHeight: string;
        leva__rowHeight: string;
        leva__folderTitleHeight: string;
        leva__checkboxSize: string;
        leva__joystickWidth: string;
        leva__joystickHeight: string;
        leva__colorPickerWidth: string;
        leva__colorPickerHeight: string;
        leva__imagePreviewWidth: string;
        leva__imagePreviewHeight: string;
        leva__monitorHeight: string;
        leva__titleBarHeight: string;
    };
    shadows: {
        leva__level1: string;
        leva__level2: string;
    };
    borderWidths: {
        leva__root: string;
        leva__input: string;
        leva__focus: string;
        leva__hover: string;
        leva__active: string;
        leva__folder: string;
    };
    fontWeights: {
        leva__label: string;
        leva__folder: string;
        leva__button: string;
    };
}, {
    $leva__flex: unknown;
    $leva__flexCenter: unknown;
    $leva__reset: unknown;
    $leva__draggable: unknown;
    $leva__focus: string;
    $leva__focusWithin: string;
    $leva__hover: string;
    $leva__active: string;
    $leva__inputStyle: string;
    $leva__focusStyle: string;
    $leva__hoverStyle: string;
    $leva__activeStyle: string;
}, import("@stitches/core").CSSPropertiesToTokenScale>;
export declare function Vector<T extends Record<string, number>>({ value, onUpdate, settings, hideNumberLabels, }: VectorProps<T>): JSX.Element;
