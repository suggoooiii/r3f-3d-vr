import * as React from "react";
import { Primitive } from "@radix-ui/react-primitive";
import * as ArrowPrimitive from "@radix-ui/react-arrow";
import * as Polymorphic from "@radix-ui/react-polymorphic";
import { Side, Align } from "@radix-ui/popper";
import { Measurable } from "@radix-ui/rect";
type PopperOwnProps = Polymorphic.Merge<Polymorphic.OwnProps<typeof Primitive>, {
    anchorRef: React.RefObject<Measurable>;
    side?: Side;
    sideOffset?: number;
    align?: Align;
    alignOffset?: number;
    collisionTolerance?: number;
    avoidCollisions?: boolean;
}>;
type PopperPrimitive = Polymorphic.ForwardRefComponent<Polymorphic.IntrinsicElement<typeof Primitive>, PopperOwnProps>;
export const Popper: PopperPrimitive;
type PopperArrowOwnProps = Polymorphic.Merge<Polymorphic.OwnProps<typeof ArrowPrimitive.Root>, {
    offset?: number;
}>;
type PopperArrowPrimitive = Polymorphic.ForwardRefComponent<Polymorphic.IntrinsicElement<typeof ArrowPrimitive.Root>, PopperArrowOwnProps>;
export const PopperArrow: PopperArrowPrimitive;
export const Root: PopperPrimitive;
export const Arrow: PopperArrowPrimitive;

//# sourceMappingURL=index.d.ts.map
