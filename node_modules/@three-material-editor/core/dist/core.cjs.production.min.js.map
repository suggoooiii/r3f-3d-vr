{"version":3,"file":"core.cjs.production.min.js","sources":["../../../node_modules/style-inject/dist/style-inject.es.js","../src/state.tsx","../src/helpers/regex.tsx","../src/helpers/formatter.tsx","../src/cshader.ts","../src/components/tabs/tabs.tsx","../src/helpers/shaderToMaterial.tsx","../src/components/menu/menuLi.tsx","../src/components/menu/menuSub.tsx","../src/components/menu/menuHead.tsx","../src/components/menu/menuActions.tsx","../src/components/menu/menuUniforms.tsx","../src/components/menu/menu.tsx","../src/fullscreen.tsx","../src/editor.tsx","../src/helpers/improveMaterial.tsx","../src/middleware.tsx","../src/index.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { Material, Scene } from 'three';\nimport { proxy } from 'valtio';\nimport { devtools } from 'valtio/utils';\n\nexport interface State {\n  showMenu: boolean;\n  showEditor: boolean;\n  fullScreen: boolean;\n  className: string;\n  diffMode: boolean;\n  showUniforms: boolean;\n  obcMode: boolean;\n  triggerUpdate: number;\n  length: number;\n  scene: Scene | null;\n  diagnostics: any | null;\n  composer: any | null;\n  materials: Material[];\n  tabs: any;\n  activeMaterial: {\n    type: string;\n    open: boolean;\n    cache?: any;\n    isModif: boolean;\n    model?: null | string;\n    cachedModel?: null | string;\n  };\n}\n\nexport const editorState = proxy<State>({\n  className: '',\n  showMenu: false,\n  showEditor: false,\n  showUniforms: false,\n  fullScreen: true,\n  diffMode: false,\n  obcMode: false,\n  length: 0,\n  triggerUpdate: 0,\n  scene: null,\n  composer: null,\n  materials: [],\n  diagnostics: {},\n  tabs: {},\n  activeMaterial: {\n    type: '',\n    open: false,\n    model: null,\n    cachedModel: null,\n    isModif: false,\n    cache: {\n      vert: '',\n      frag: '',\n    },\n  },\n});\ndevtools(editorState, 'material editor');\n\ninterface Map {\n  [key: string]: any;\n}\n\nexport const editorContextState: Map = {\n  materials: {},\n  activeMaterialRef: {},\n  programs: [],\n  editorWidth: 520,\n  editorMinusHeight: 0,\n  gl: null,\n};\n","/**\n * Regular expression for matching the `void main() {` opener line in GLSL.\n * @type {RegExp}\n */\nexport const voidMainRegExp: any = /\\bvoid\\s+main\\s*\\(\\s*\\)\\s*{/g;\n\nexport const commentedIncludeRegExp: any = /^(\\s*)\\/\\/ #include <([a-zA-Z0-9_]+)>/gm;\n\nexport const includeRegExp: any = /^(\\s*)#include <([a-zA-Z0-9_]+)>/gm;\n\nexport function getMainExtents(text: string) {\n  const mainRegex = /void\\s*main\\s*\\(.*?\\)[\\s\\S]*?\\{/g;\n  const mainResult = mainRegex.exec(text);\n\n  if (!mainResult) {\n    return null;\n  }\n\n  const braceRegex = /[{}]/g;\n  braceRegex.lastIndex = mainRegex.lastIndex + mainResult[0].length;\n\n  const before = mainRegex.lastIndex - mainResult[0].length;\n  const after = mainRegex.lastIndex;\n  let end = 0;\n\n  let braceCount = 1;\n  let lastResult;\n  while ((lastResult = braceRegex.exec(text))) {\n    const brace = lastResult[0];\n    if (brace === '{') {\n      braceCount++;\n    } else {\n      braceCount--;\n      if (braceCount === 0) {\n        end = lastResult.index - 1;\n        break;\n      }\n    }\n  }\n\n  return { before, after, end };\n}\n","import { ShaderChunk } from 'three';\nimport { editorContext } from '..';\nimport { editorState } from '../state';\nimport { commentedIncludeRegExp, includeRegExp } from './regex';\n\nexport const replaceShaderChunks = (code: string | undefined) => {\n  if (typeof code !== 'string') {\n    return\n  }\n  const format = code.replaceAll(\n    includeRegExp,\n    (_substring: any, _indent: any, name: any) => {\n      let chunk = ShaderChunk[name];\n      chunk = chunk.split('\\n').map(line => line).join(`\\n\\t`);\n\n      return `// #include <${name}>\\n\\t${chunk}\\n//\\n`;\n    }\n  );\n  return format;\n};\n\nconst _formatToObc = (code: string | undefined) => {\n  if (typeof code !== 'string') {\n    return\n  }\n  const resetIncludes = code\n    .replaceAll(\n      commentedIncludeRegExp,\n      (_substring: any, _indent: any, name: any) => {\n        return `#include <${name}>`;\n      }\n    )\n    .trim();\n\n  const result = resetIncludes.split(includeRegExp);\n\n  var filtered = result.filter(function(el) {\n    return el !== '';\n  });\n  return filtered;\n};\n\nexport const generateHMRObc = (shader: any) => {\n  if (!editorContext.monacoRef) {\n    return ''\n  }\n  const model = editorState.activeMaterial.model;\n  const oModel = editorContext.monacoRef.editor\n    .getModel(model + '_orig')\n    .getValue();\n  const mModel = editorContext.monacoRef.editor.getModel(model).getValue();\n  let newValue = oModel;\n  // set back comments to #include\n  const base = _formatToObc(oModel);\n  const edited = _formatToObc(mModel);\n  const result = new Map();\n  if (!base || !edited) {\n    return ''\n  }\n  for (let index = 0; index < base.length; index++) {\n    const b = base[index];\n    const e = edited[index];\n    if (b !== e && Object.keys(e).length !== 0) {\n      result.set(edited[index - 1], e);\n    }\n  }\n\n  if (result.size > 0) {\n    result.forEach((value: string, key: any) => {\n      shader.fragmentShader = shader.fragmentShader.replace(\n        `#include <${key}>`,\n        `${value}`\n      );\n    });\n  }\n  return newValue;\n};\n\nexport const generateOBc = (_code: string |Â undefined) => {\n  const model = editorState.activeMaterial.cachedModel;\n  const type = editorState.activeMaterial.type === 'frag' ? 'fragmentShader' : 'vertexShader';\n  const oModel = editorContext.monacoRef.editor\n    .getModel(model + '_orig')\n    .getValue();\n  const mModel = editorContext.monacoRef.editor.getModel(model).getValue();\n\n  const base = _formatToObc(oModel);\n  const edited = _formatToObc(mModel);\n  const result = new Map();\n  if (!base || !edited) {\n    return ''\n  }\n  for (let index = 0; index < base.length; index++) {\n    const b = base[index];\n    const e = edited[index];\n    if (b !== e) {\n      result.set(edited[index - 1], e);\n    }\n  }\n  let onBeforeCompileFunction = `// generated using three-material-editor\\nmaterial.onBeforeCompile = (shader) => {\\n`;\n  result.forEach((value: string, key: any) => {\n    // minify\n    const valueFormated =\n      value.length > 500 ? value.trim().replace(/(\\r\\n|\\n|\\r)/gm, '') : value;\n    onBeforeCompileFunction += `${\n      value.length > 500 ? '\\t// > 500 characters - auto minified\\n' : ''\n    }\\tshader.${type} = shader.${type}.replace(\\`#include <${key}>\\`, \\`${valueFormated} \\`);\\n`;\n  });\n  onBeforeCompileFunction += `}\\n`;\n\n  editorState.obcMode = true;\n  editorState.triggerUpdate++;\n  return onBeforeCompileFunction;\n};\n","import { languages } from 'monaco-editor';\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport IRichLanguageConfiguration = languages.LanguageConfiguration;\nimport ILanguage = languages.IMonarchLanguage;\n\nexport const conf: IRichLanguageConfiguration = {\n  comments: {\n    lineComment: '//',\n    blockComment: ['/*', '*/'],\n  },\n  brackets: [\n    ['{', '}'],\n    ['[', ']'],\n    ['(', ')'],\n  ],\n  autoClosingPairs: [\n    { open: '[', close: ']' },\n    { open: '{', close: '}' },\n    { open: '(', close: ')' },\n    { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n    { open: '\"', close: '\"', notIn: ['string'] },\n  ],\n  surroundingPairs: [\n    { open: '{', close: '}' },\n    { open: '[', close: ']' },\n    { open: '(', close: ')' },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n  ],\n  folding: {\n    markers: {\n      start: new RegExp('^\\\\s*#pragma\\\\s+region\\\\b'),\n      end: new RegExp('^\\\\s*#pragma\\\\s+endregion\\\\b'),\n    },\n  },\n};\n\nexport const language = {\n  defaultToken: '',\n  tokenPostfix: '.cpp',\n\n  brackets: [\n    { token: 'delimiter.curly', open: '{', close: '}' },\n    { token: 'delimiter.parenthesis', open: '(', close: ')' },\n    { token: 'delimiter.square', open: '[', close: ']' },\n    { token: 'delimiter.angle', open: '<', close: '>' },\n  ],\n\n  keywords: [\n    'discard',\n    'length',\n    'smoothstep',\n    'uniform',\n    'precision',\n    'mediump',\n    'highp',\n    'vec2',\n    'vec3',\n    'vec4',\n    'ivec2',\n    'ivec3',\n    'ivec4',\n    'abstract',\n    'amp',\n    'array',\n    'auto',\n    'bool',\n    'break',\n    'case',\n    'catch',\n    'char',\n    'class',\n    'const',\n    'gl_FragColor',\n    'constexpr',\n    'const_cast',\n    'continue',\n    'cpu',\n    'decltype',\n    'default',\n    'delegate',\n    'delete',\n    'do',\n    'double',\n    'dynamic_cast',\n    'each',\n    'else',\n    'enum',\n    'event',\n    'explicit',\n    'export',\n    'extern',\n    'false',\n    'final',\n    'finally',\n    'float',\n    'for',\n    'friend',\n    'gcnew',\n    'generic',\n    'goto',\n    'if',\n    'in',\n    'initonly',\n    'inline',\n    'int',\n    'interface',\n    'interior_ptr',\n    'internal',\n    'literal',\n    'long',\n    'mutable',\n    'namespace',\n    'new',\n    'noexcept',\n    'nullptr',\n    '__nullptr',\n    'operator',\n    'override',\n    'partial',\n    'pascal',\n    'pin_ptr',\n    'private',\n    'property',\n    'protected',\n    'public',\n    'ref',\n    'register',\n    'reinterpret_cast',\n    'restrict',\n    'return',\n    'safe_cast',\n    'sealed',\n    'short',\n    'signed',\n    'sizeof',\n    'static',\n    'static_assert',\n    'static_cast',\n    'struct',\n    'switch',\n    'template',\n    'this',\n    'thread_local',\n    'throw',\n    'tile_static',\n    'true',\n    'try',\n    'typedef',\n    'typeid',\n    'typename',\n    'union',\n    'unsigned',\n    'using',\n    'virtual',\n    'void',\n    'volatile',\n    'wchar_t',\n    'where',\n    'while',\n  ],\n\n  typeKeywords: 'float int bool void\\nvec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4\\nmat2 mat3 mat4\\nsampler2D sampler3D samplerCube\\nconst attribute uniform varying'.split(\n    /\\s+/\n  ),\n\n  operators: [\n    '=',\n    '>',\n    '<',\n    '!',\n    '~',\n    '?',\n    ':',\n    '==',\n    '<=',\n    '>=',\n    '!=',\n    '&&',\n    '||',\n    '++',\n    '--',\n    '+',\n    '-',\n    '*',\n    '/',\n    '&',\n    '|',\n    '^',\n    '%',\n    '<<',\n    '>>',\n    '>>>',\n    '+=',\n    '-=',\n    '*=',\n    '/=',\n    '&=',\n    '|=',\n    '^=',\n    '%=',\n    '<<=',\n    '>>=',\n    '>>>=',\n  ],\n\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*/^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\n  floatsuffix: /[fFlL]?/,\n  encoding: /u|u8|U|L/,\n\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // C++ 11 Raw String\n      [\n        /@encoding?R\"(?:([^ ()\\\\\\t]*))\\(/,\n        { token: 'string.raw.begin', next: '@raw.$1' },\n      ],\n\n      // identifiers and keywords\n      [\n        /[a-z_$][\\w$]*/,\n        {\n          cases: {\n            '@typeKeywords': 'keyword',\n            '@keywords': 'keyword',\n            '@default': 'identifier',\n          },\n        },\n      ],\n      [/[A-Z][\\w$]*/, 'type.identifier'], // to show class names nicely\n\n      // whitespace\n      { include: '@whitespace' },\n\n      // [[ attributes ]].\n      [/\\[\\[.*\\]\\]/, 'annotation'],\n\n      [\n        /^\\s*#include/,\n        { token: 'keyword.directive.include', next: '@include' },\n      ],\n\n      // Preprocessor directive\n      [/^\\s*#\\s*\\w+/, 'keyword'],\n\n      // delimiters and operators\n      [/[{}()[\\]]/, '@brackets'],\n      [/[<>](?!@symbols)/, '@brackets'],\n      [\n        /@symbols/,\n        {\n          cases: {\n            '@operators': 'delimiter',\n            '@default': '',\n          },\n        },\n      ],\n\n      // numbers\n      [/\\d*\\d+[eE]([-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n      [/\\d*\\.\\d+([eE][-+]?\\d+)?(@floatsuffix)/, 'number.float'],\n      [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, 'number.hex'],\n      [/0[0-7']*[0-7](@integersuffix)/, 'number.octal'],\n      [/0[bB][0-1']*[0-1](@integersuffix)/, 'number.binary'],\n      [/\\d[\\d']*\\d(@integersuffix)/, 'number'],\n      [/\\d(@integersuffix)/, 'number'],\n\n      // delimiter: after number because of .\\d floats\n      [/[;,.]/, 'delimiter'],\n\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'], // non-teminated string\n      [/\"/, 'string', '@string'],\n\n      // characters\n      [/'[^\\\\']'/, 'string'],\n      [/(')(@escapes)(')/, ['string', 'string.escape', 'string']],\n      [/'/, 'string.invalid'],\n    ],\n\n    whitespace: [\n      [/[ \\t\\r\\n]+/, ''],\n      [/\\/\\*\\*(?!\\/)/, 'comment.doc', '@doccomment'],\n      [/\\/\\*/, 'comment', '@comment'],\n      [/\\/\\/.*$/, 'comment'],\n    ],\n\n    comment: [\n      [/[^/*]+/, 'comment'],\n      [/\\*\\//, 'comment', '@pop'],\n      [/[/*]/, 'comment'],\n    ],\n    //Identical copy of comment above, except for the addition of .doc\n    doccomment: [\n      [/[^/*]+/, 'comment.doc'],\n      [/\\*\\//, 'comment.doc', '@pop'],\n      [/[/*]/, 'comment.doc'],\n    ],\n\n    string: [\n      [/[^\\\\\"]+/, 'string'],\n      [/@escapes/, 'string.escape'],\n      [/\\\\./, 'string.escape.invalid'],\n      [/\"/, 'string', '@pop'],\n    ],\n\n    raw: [\n      [\n        /(.*)(\\))(?:([^ ()\\\\\\t]*))(\")/,\n        {\n          cases: {\n            '$3==$S2': [\n              'string.raw',\n              'string.raw.end',\n              'string.raw.end',\n              { token: 'string.raw.end', next: '@pop' },\n            ],\n            '@default': [\n              'string.raw',\n              'string.raw',\n              'string.raw',\n              'string.raw',\n            ],\n          },\n        },\n      ],\n      [/.*/, 'string.raw'],\n    ],\n\n    include: [\n      [\n        /(\\s*)(<)([^<>]*)(>)/,\n        [\n          '',\n          'keyword.directive.include.begin',\n          'string.include.identifier',\n          { token: 'keyword.directive.include.end', next: '@pop' },\n        ],\n      ],\n      [\n        /(\\s*)(\")([^\"]*)(\")/,\n        [\n          '',\n          'keyword.directive.include.begin',\n          'string.include.identifier',\n          { token: 'keyword.directive.include.end', next: '@pop' },\n        ],\n      ],\n    ],\n  },\n} as ILanguage;\n","import React from 'react';\nimport { editorState } from '../../state';\n// import { editorContext } from '../../.';\nimport styles from './tabs.module.css';\nimport editorcss from '../../editor.module.css';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { useProxy } from 'valtio';\nimport { IoImageOutline } from 'react-icons/io5';\nimport { IoCubeOutline } from 'react-icons/io5';\nimport { checkIfModifications } from '../../editor';\n\nexport const EditorTabs = () => {\n  const snapshot = useProxy(editorState);\n  const setActive = (value: any) => {\n    if (editorState.obcMode || editorState.diffMode) {\n      editorState.activeMaterial.model = editorState.activeMaterial.cachedModel;\n      editorState.activeMaterial.cachedModel = null;\n      editorState.diffMode = false;\n      editorState.obcMode = false;\n      editorState.triggerUpdate++;\n    } else {\n      editorState.activeMaterial = value\n    }\n   \n    checkIfModifications();\n  };\n  const closeTab = (key: any) => {\n    delete editorState.tabs[key];\n    if (Object.keys(editorState.tabs).length === 0) {\n      editorState.obcMode = false;\n      editorState.diffMode = false;\n      editorState.triggerUpdate++;\n      return\n    }\n    let lastKey = Object.keys(editorState.tabs).pop()\n    if (lastKey) {\n      editorState.activeMaterial = editorState.tabs[lastKey]\n    }\n  };\n\n  return (\n    <div\n      className={`${styles.tabs} ${\n        snapshot.showEditor && snapshot.fullScreen ? styles.full : ''\n      }`}\n    >\n      {Object.entries(snapshot.tabs).map(([key, value]: any) => {\n        const name = value.model.replace('urn:', '')\n        return (\n          <div key={key}>\n            <div\n              className={\n                key === snapshot.activeMaterial.model\n                  ? styles.tactive\n                  : ''\n              }\n              onClick={() => {\n                setActive(value);\n              }}\n            >\n              {value.type === 'frag' ? (\n                <IoImageOutline className={editorcss.colorf} />\n              ) : (\n                <IoCubeOutline className={editorcss.colorv} />\n              )}{' '}\n              {`${name}`}{' '}\n              <IoCloseOutline onClick={() => closeTab(value.model)} />\n            </div>\n            {/* <div onClick={() => {value.opened = false; setActive('vert')}}>{`${name}.vert`}  <IoCloseOutline onClick={() => {value.opened = false;}}/></div> */}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import { Material, ShaderLib } from 'three';\n\n// Copied from threejs WebGLPrograms.js so we can resolve builtin materials to their shaders\nconst MATERIAL_TYPES_TO_SHADERS: { [key: string]: string } = {\n  MeshDepthMaterial: 'depth',\n  MeshDistanceMaterial: 'distanceRGBA',\n  MeshNormalMaterial: 'normal',\n  MeshBasicMaterial: 'basic',\n  MeshLambertMaterial: 'lambert',\n  MeshPhongMaterial: 'phong',\n  MeshToonMaterial: 'toon',\n  MeshStandardMaterial: 'physical',\n  MeshPhysicalMaterial: 'physical',\n  MeshMatcapMaterial: 'matcap',\n  LineBasicMaterial: 'basic',\n  LineDashedMaterial: 'dashed',\n  PointsMaterial: 'points',\n  ShadowMaterial: 'shadow',\n  SpriteMaterial: 'sprite',\n};\n\nexport const getTypeForMaterial = (material: string) => {\n  let builtinType: string = MATERIAL_TYPES_TO_SHADERS[material];\n  return builtinType || (material === 'ShaderMaterial' ? 'shader' : 'unknown');\n};\n\nexport const getNameForEditorMaterial = (material: any, programGl: any) => {\n  let name = ''\n\n  if (material.isEffect) {\n    name = material.name.replace('Effect', '').toLowerCase()\n  } else {\n    name = getTypeForMaterial(programGl.name)\n  }\n  name = name + '_' + programGl.id;\n\n  return name;\n};\n\nexport const getShaderWithObc = (material: any) => {\n  let builtinType = MATERIAL_TYPES_TO_SHADERS[material.type];\n\n  const dummyShaderLib = Object.assign({}, ShaderLib[builtinType] ? ShaderLib[builtinType] : material)\n\n  if (ShaderLib[builtinType]) {\n    for (const [_key, value] of Object.entries(dummyShaderLib.uniforms)) {\n      const val:any = value\n      val.isNativeUniforms = true\n    }\n  }\n  \n  // TODO DEBUG UNIFORMS OF CUSTOM MATERIALS SHADER IS NOT SHOWING\n  if (!dummyShaderLib.obcAdded && !material.obcAdded) {\n    material.obcAdded = true;\n    dummyShaderLib.obcAdded = true;\n    material.onBeforeCompile.call(\n      material,\n      dummyShaderLib\n    );\n    dummyShaderLib.uniforms = Object.assign(dummyShaderLib.uniforms, material.uniforms);\n  }\n  return dummyShaderLib;\n};\n\nexport const getShaderLibForMaterial = (material: Material) => {\n  let builtinType = MATERIAL_TYPES_TO_SHADERS[material.type];\n\n  return builtinType ? ShaderLib[builtinType] : material;\n};\n","import React, { VFC } from 'react';\nimport { getNameForEditorMaterial } from '../../helpers/shaderToMaterial';\nimport { editorState } from '../../state';\nimport { useProxy } from 'valtio';\nimport { editorContext } from '../../.';\nimport editorcss from '../../editor.module.css';\nimport { checkIfModifications } from '../../editor';\n\nimport styles from './menu.module.css';\nimport { IoImageOutline } from 'react-icons/io5';\nimport { IoCubeOutline } from 'react-icons/io5';\n\ninterface LiMenuProps {\n  type: string;\n  program: any;\n}\n\nexport const LiMenu: VFC<LiMenuProps> = ({ type, program }) => {\n  const snapshot = useProxy(editorState);\n  const material = program.material;\n  const programGl = program.program;\n\n  const name = getNameForEditorMaterial(material, programGl)\n  const getModif = (type: string) => {\n    if (!editorContext.monacoRef) {\n      return;\n    }\n    const oModel = editorContext.monacoRef.editor.getModel(\n      `urn:${name}.${type}_orig`\n    );\n    const mModel = editorContext.monacoRef.editor.getModel(\n      `urn:${name}.${type}`\n    );\n    if (!oModel || !mModel) {\n      return null;\n    }\n    return oModel.getValue() !== mModel.getValue();\n  };\n  // TODO M DISPARAIT QUAND ON MINIMIZE L'EDITOR\n\n  return (\n    <li\n      className={`${\n        snapshot.tabs[`urn:${name}.${type}`] ? styles.open : ''\n      } + ' ' + ${\n        snapshot.activeMaterial &&\n        snapshot.activeMaterial.model === `urn:${name}.${type}`\n          ? styles.mactive\n          : ''\n      }`}\n      onClick={() => {\n        const value = {\n          type,\n          open: true,\n          cachedModel: `urn:${name}.${type}`,\n          isModif: false,\n          model: `urn:${name}.${type}`\n        };\n        editorState.activeMaterial = value;\n        editorContext.activeMaterialRef[value.model] = program;\n        editorState.tabs[`urn:${name}.${type}`] = value;\n\n        editorState.showUniforms = true\n\n        editorState.showEditor = true;\n        editorState.diffMode = false;\n        editorState.obcMode = false;\n        editorState.triggerUpdate++;\n        checkIfModifications();\n      }}\n    >\n      {type === 'frag' ? (\n        <IoImageOutline className={editorcss.colorf} />\n      ) : (\n        <IoCubeOutline className={editorcss.colorv} />\n      )}{' '}\n      {name}.{type}{' '}\n      {getModif(type) && <span className={styles.isModif}>M</span>}\n    </li>\n  );\n};\n","import React, { useState, VFC } from 'react';\nimport { getNameForEditorMaterial } from '../../helpers/shaderToMaterial';\nimport { editorState } from '../../state';\nimport { useProxy } from 'valtio';\n\nimport { IoEyeOutline } from 'react-icons/io5';\nimport { IoEyeOffOutline } from 'react-icons/io5';\nimport { RiArrowDownSFill } from 'react-icons/ri';\nimport { RiArrowRightSFill } from 'react-icons/ri';\nimport styles from './menu.module.css';\nimport { IoCubeOutline } from 'react-icons/io5';\nimport { VscSettings } from 'react-icons/vsc';\nimport { editorContext } from '../../.';\n\nimport { LiMenu } from './menuLi';\n\ninterface SubMenuProps {\n  program: any;\n}\n\nexport const SubMenu: VFC<SubMenuProps> = ({ program }) => {\n  const snapshot = useProxy(editorState);\n  const [open, set] = useState(true);\n  const material = program.material;\n  const programGl = program.program;\n  if (!programGl) {\n    return null\n  }\n  const name = getNameForEditorMaterial(material, programGl)\n\n  const hide = (e: any) => {\n    e.stopPropagation();\n    \n    // TODO PP LIBS renderToScreen or pass.enabled\n    material.visible = !material.visible;\n    material.enabled = !material.enabled;\n    material.needsUpdate = true;\n    editorState.triggerUpdate++;\n  };\n\n  const showUniforms = (e: any) => {\n    e.stopPropagation();\n\n    const value = {\n      type: '',\n      open: true,\n      isModif: false,\n      model: `urn:${name}`\n    };\n  \n    editorState.activeMaterial = value;\n    editorContext.activeMaterialRef[value.model] = program;\n    \n    editorState.showEditor = false;\n    editorState.diffMode = false;\n    editorState.obcMode = false;\n    editorState.showUniforms = true\n    editorState.triggerUpdate++;\n  };\n\n  return programGl && material ? (\n    <div key={snapshot.triggerUpdate} className={open ? styles.sbopen : ''}>\n      <div\n        className={`${styles.hmenu} ${\n          snapshot.tabs[`urn:${name}.frag`] || snapshot.tabs[`urn:${name}.vert`]\n            ? styles.open\n            : ''\n        }`}\n        onClick={showUniforms}\n      >\n        {open ? <RiArrowDownSFill  onClick={() => {\n          set(!open);\n        }} /> : <RiArrowRightSFill onClick={() => {\n          set(!open);\n        }} />} {name}\n        {material && material.numberOfMaterialsUser > 1 && (\n          <span className={styles.multiusers}>\n            <IoCubeOutline />\n            <small>{material.numberOfMaterialsUser}</small>\n          </span>\n        )}\n        <VscSettings className={styles.unibtn} />\n        {(material && !material.visible && !material.isEffect ? (\n          <IoEyeOffOutline onClick={hide} className={styles.eye} />\n        ) : (\n          <IoEyeOutline onClick={hide} className={styles.eye} />\n        ))}\n      </div>\n      {open && (\n        <ul>\n          {material.fragmentShader && <LiMenu program={program} type={'frag'} />}\n          {material.vertexShader && <LiMenu program={program} type={'vert'} />}\n        </ul>\n      )}\n    </div>\n  ) : null;\n};","import React from 'react';\nimport { editorState } from '../../state';\nimport { useProxy } from 'valtio';\n\nimport { AiOutlineFullscreen } from 'react-icons/ai';\nimport { BiDockRight } from 'react-icons/bi';\nimport { BsArrowBarRight } from 'react-icons/bs';\nimport { BsArrowBarLeft } from 'react-icons/bs';\nimport styles from './menu.module.css';\n\nexport const HeadMenu = () => {\n  const snapshot = useProxy(editorState);\n\n  return (\n    <div key={snapshot.triggerUpdate} className={styles.mhead}>\n      {editorState.showEditor && editorState.fullScreen && (\n        <BiDockRight\n          onClick={() => {\n            editorState.fullScreen = false;\n          }}\n        />\n      )}\n      {editorState.showEditor && !editorState.fullScreen && (\n        <AiOutlineFullscreen\n          onClick={() => {\n            editorState.fullScreen = true;\n          }}\n        />\n      )}\n      <div\n        onClick={() => {\n          editorState.showEditor = !editorState.showEditor;\n          editorState.diffMode = false;\n        }}\n      >\n        {snapshot.showEditor ? <BsArrowBarRight /> : <BsArrowBarLeft />}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { editorState } from '../../state';\nimport { useProxy } from 'valtio';\n\nimport { getNameForEditorMaterial } from '../../helpers/shaderToMaterial';\n\nimport { AiOutlineFunction } from 'react-icons/ai';\nimport { VscCompareChanges } from 'react-icons/vsc';\nimport { HiOutlineClipboardCopy } from 'react-icons/hi';\nimport { BiEraser } from 'react-icons/bi';\n\nimport styles from './menu.module.css';\nimport { editorContextState as editorContext } from '../../state';\n\n\nexport const BottomAction = () => {\n  const snapshot = useProxy(editorState);\n  let isShader = false;\n  if (!editorContext.monacoRef || !editorState.activeMaterial.model) {\n    return null;\n  }\n  let activeMat = editorContext.activeMaterialRef[editorState.activeMaterial.model]\n  if ( activeMat && activeMat.material) {\n    isShader = activeMat.material.type === ('ShaderMaterial' || 'RawShaderMaterial');\n  }\n\n  if (editorState.obcMode && editorState.activeMaterial.cachedModel) {\n    activeMat = editorContext.activeMaterialRef[editorState.activeMaterial.cachedModel]\n  }\n  \n  if (!activeMat) {\n    return null\n  }\n  const material: any = activeMat.material;\n\n  const cancelChange = () => {\n    const type = editorState.activeMaterial.type;\n    const program: any = activeMat.program;\n    const name = getNameForEditorMaterial(material, program)\n\n    const oModel = editorContext.monacoRef.editor.getModel(\n      `urn:${name}.${type}_orig`\n    );\n    const model = editorContext.monacoRef.editor.getModel(\n      `urn:${name}.${type}`\n    );\n    if (model) {\n      model.setValue(oModel.getValue());\n    }\n    editorState.activeMaterial.isModif = false;\n  };\n\n  const openObcMode = () => {\n    editorState.activeMaterial.cachedModel = editorState.activeMaterial.model + '';\n    setTimeout(() => {\n      editorState.activeMaterial.model = 'urn:obc_result';\n      editorState.showEditor = true;\n      editorState.diffMode = false;\n      editorState.obcMode = true;\n    }, 0);\n  };\n  const closeObcMode = () => {\n    editorState.activeMaterial.model = editorState.activeMaterial.cachedModel;\n    editorState.activeMaterial.cachedModel = null;\n    editorState.diffMode = false;\n    editorState.obcMode = false;\n    editorState.triggerUpdate++;\n  };\n  return snapshot.activeMaterial && snapshot.activeMaterial.isModif && snapshot.showEditor && material ? (\n    <div key={snapshot.triggerUpdate} className={styles.menub}>\n      {snapshot.obcMode && (\n        <div\n          className={`${styles.menubaction}`}\n          onClick={() => {\n            editorContext.editor.trigger(\n              'source',\n              'editor.action.clipboardCopyAction'\n            );\n          }}\n        >\n          <HiOutlineClipboardCopy /> Copy\n        </div>\n      )}\n      {!snapshot.diffMode && !snapshot.obcMode && (\n        <div\n          className={styles.menubaction}\n          onClick={() => {\n            editorState.diffMode = true;\n          }}\n        >\n          <VscCompareChanges /> Analyze diff\n        </div>\n      )}\n      {snapshot.diffMode && !snapshot.obcMode && (\n        <div\n          className={`${styles.menubaction} ${styles.closemenubaction}`}\n          onClick={() => {\n            editorState.diffMode = false;\n          }}\n        >\n          <VscCompareChanges /> Close diff\n        </div>\n      )}\n      {!isShader && !snapshot.diffMode && !snapshot.obcMode && material && !material.isEffect && (\n        <div\n          className={styles.menubaction}\n          onClick={() => {\n            openObcMode();\n          }}\n        >\n          <AiOutlineFunction /> onBeforeCompile\n        </div>\n      )}\n      {!isShader && snapshot.obcMode && material && !material.isEffect && (\n        <div\n          className={`${styles.menubaction} ${styles.closemenubaction}`}\n          onClick={() => {\n            closeObcMode();\n          }}\n        >\n          <AiOutlineFunction /> onBeforeCompile\n        </div>\n      )}\n      {!snapshot.obcMode && !snapshot.diffMode && (\n        <div\n          className={`${styles.menubaction} ${styles.closemenubaction} ${styles.resetmenub}`}\n          onClick={cancelChange}\n        >\n          <BiEraser /> Reset shader\n        </div>\n      )}\n    </div>\n  ) : null;\n};","\n\nimport React, { useEffect, VFC } from 'react';\nimport { editorContextState as editorContext, editorState } from '../../state';\nimport { Leva, LevaPanel, useControls, useCreateStore } from \"leva\";\nimport { useProxy } from 'valtio';\nimport * as THREE from 'three'\n\n// import styles from './menu.module.css';\n\ninterface UniformsMenuProps {\n}\n\n// foreach\nconst color = new THREE.Color()\nexport const UniformsMenu: VFC<UniformsMenuProps> = () => {\n  const snapshot = useProxy(editorState);\n  const [store, setSelection]:any = React.useState(null)\n  if (!editorContext.monacoRef) {\n    return null;\n  }\n\n  if (!editorContext.activeMaterialRef || !editorState.activeMaterial.model) {\n    return null;\n  }\n  const activeMat = editorContext.activeMaterialRef[editorState.activeMaterial.model]\n\n  if (!activeMat) {\n    return null\n  }\n  const material: any = activeMat.material;\n\n\n  if (!editorState.showUniforms || !material.uniforms) {\n    return null\n  }\n\n  const filteredItems:any = {}\n\n\n  if (material.uniforms.size && material.uniforms.size > 0) {\n    material.uniforms.forEach((uniform: any, key: any) => {\n      if (!uniform.isNativeUniforms && key !== 'time') {\n        if (typeof uniform.value === 'number') {\n          uniform.min = -1\n          uniform.max = 1\n        }\n        if (uniform.type) {\n          delete uniform.type\n        }\n\n        if (uniform && uniform.value && uniform.value.image) {\n          filteredItems[key] = {image: uniform.value}\n          uniform.copyRef = uniform.value.image.currentSrc\n        } else if (uniform.value && uniform.value.isColor) {\n          const col = uniform.value\n          filteredItems[key] = {r: col.r * 255, g: col.g * 255, b: col.b * 255}\n        } else {\n          filteredItems[key] = uniform\n        }\n        material.uniforms.set(key, uniform)\n        Object.entries(filteredItems[key]).map(([skey, value]) => {\n          if (typeof value === 'string') {\n            delete filteredItems[key][skey]\n          }\n        })\n      }\n    })\n  } else if (typeof material.uniforms === 'object') {\n    if (Object.keys(material.uniforms).length === 0) {\n      return null\n    }\n    Object.entries(material.uniforms).map(([key, uniform]: any) => {\n      if (!uniform.isNativeUniforms && key !== 'time') {\n        if (typeof uniform.value === 'number') {\n          uniform.min = Math.min(-1, -Math.round(uniform.value))\n          uniform.max = Math.max(1, Math.round(uniform.value))\n        }\n        if (uniform.type) {\n          delete uniform.type\n        }\n        if (uniform && uniform.value && uniform.value.image) {\n          filteredItems[key] = {image: uniform.value}\n          uniform.copyRef = uniform.value.image.currentSrc\n\n        } else if (uniform.value && uniform.value.isColor) {\n          const col = uniform.value\n          filteredItems[key] = {r: col.r * 255, g: col.g * 255, b: col.b * 255}\n        } else {\n          filteredItems[key] = uniform\n        }\n\n        Object.entries(filteredItems[key]).map(([skey, value]) => {\n          if (typeof value === 'string') {\n            delete filteredItems[key][skey]\n          }\n        })\n      }\n    })\n  }\n\n\n\n  return (\n    <div>\n      <Leva fill={true} flat={true} hideTitleBar oneLineLabels={false} />\n      <LevaPanel fill={true} flat={true}  hideTitleBar={true} store={store} oneLineLabels={false} />\n      {/* <LevaPanel store={store} oneLineLabels={false} /> */}\n      <div key={snapshot.triggerUpdate}>\n        <UniformComp filteredItems={filteredItems} setSelection={setSelection} uniforms={material.uniforms} store={store} />\n      </div>\n    </div>\n  )\n};\n\n\n\n\nconst loadTexture = (uniforms: any, materialUniform: any, key: string, value: any) => {\n\n  if (materialUniform && materialUniform.value && materialUniform.value.image) {\n    if (value && value !== materialUniform.value.image.preventDouble) {\n      new THREE.TextureLoader().load(value, (x) => {\n        materialUniform.value = x\n        materialUniform.value.wrapS = materialUniform.value.wrapT = THREE.RepeatWrapping\n\n        materialUniform.value.image.preventDouble = value\n        materialUniform.value.image.isOriginal = false\n        materialUniform.value.needsUpdate = true\n        setUniformValue(uniforms, materialUniform, key)\n\n      })\n    } else if (!value && !materialUniform.value.image.isOriginal) {\n      new THREE.TextureLoader().load(materialUniform.copyRef, (x) => {\n        materialUniform.value = x\n        materialUniform.value.wrapS = materialUniform.value.wrapT = THREE.RepeatWrapping\n\n        materialUniform.value.image.preventDouble = value\n        materialUniform.value.image.isOriginal = true\n        materialUniform.value.needsUpdate = true\n        setUniformValue(uniforms, materialUniform, key)\n      })\n    }\n  }\n \n}\nconst UniformComp = ({filteredItems, uniforms, setSelection} :any) => {\n  const store = useCreateStore()\n  const [elements] = useControls(() => (filteredItems), { store })\n\n\n  useEffect(() => {\n    for (const [key, value] of Object.entries(elements)) {\n      const val:any = value\n      var materialUniform = uniforms[key] || uniforms.get(key)\n\n      // is image\n      if (typeof value === 'string' || !value) {\n        loadTexture(uniforms, materialUniform, key, value)\n      } else {\n\n        if (materialUniform) {\n          if (val['r'] && val['g'] && val['b']) {\n            const factor =  255\n            materialUniform.value = color.setRGB(val['r'] / factor, val['g'] / factor, val['b'] / factor)\n            setUniformValue(uniforms, materialUniform, key)\n\n          } else {\n            materialUniform.value = value\n            setUniformValue(uniforms, materialUniform, key)\n          }\n        }\n      }\n    }\n  }, [elements])\n\n  useEffect(() => {\n    setSelection(store)\n  }, [store, setSelection])\n\n  return null\n}\n\nconst setUniformValue = (uniforms: any, materialUniform: any, key: string) => {\n  if (!uniforms[key]) {\n    uniforms.set(key, materialUniform)\n  }\n}","import React from 'react';\nimport { editorContext } from '../../.';\nimport { editorState } from '../../state';\nimport { useProxy } from 'valtio';\n\nimport { useDrag } from 'react-use-gesture';\nimport styles from './menu.module.css';\nimport { SubMenu } from './menuSub';\nimport { HeadMenu } from './menuHead';\nimport { BottomAction } from './menuActions';\nimport { UniformsMenu } from './menuUniforms';\n\nexport const Menu = () => {\n  const snapshot = useProxy(editorState);\n  let editorWidth = editorContext.editorWidth;\n  let editorHeight = editorContext.editorMinusHeight;\n  const menuSize = 160\n\n  const bind = useDrag(({ down, delta: [mx, my] }) => {\n    if (editorState.fullScreen) {\n      return;\n    }\n    if (down && typeof window !== 'undefined') {\n      editorWidth -= editorWidth - mx > window.innerWidth - menuSize ? 0 : mx\n      editorHeight -= editorHeight - my < 0 ? 0 : my\n\n      editorContext.dom.current.style.setProperty(\n        '--editor-width', editorWidth + 'px'\n      );\n      editorContext.dom.current.style.setProperty(\n        '--editor-minus-height', editorHeight + 'px'\n      );\n    } else {\n      if (typeof window !== 'undefined') {\n        if (window.innerWidth - editorWidth < 200) { editorWidth = window.innerWidth - menuSize}\n        if (editorHeight < 40) { editorHeight = 0}\n        editorContext.dom.current.style.setProperty(\n          '--editor-width', editorWidth + 'px'\n        );\n        editorContext.dom.current.style.setProperty(\n          '--editor-minus-height', editorHeight + 'px'\n        );\n      }\n      editorContext.editorWidth = editorWidth;\n      editorContext.editorMinusHeight = editorHeight;\n    }\n  });\n  return editorContext.programs.length > 0 ? (\n    <div\n      className={`${styles.menu} ${!snapshot.showEditor ? styles.menurh : ''} ${\n        snapshot.showEditor && snapshot.fullScreen ? styles.full : ''\n      }`}\n      {...bind()}\n      style={{ touchAction: 'none' }}\n    >\n      <HeadMenu />\n      <div key={snapshot.triggerUpdate} className={styles.menulist}>\n        {editorContext.programs.map((value: any, key: any) => {\n          return <SubMenu program={value} key={key.toString()} />;\n        })}\n      </div>\n      <UniformsMenu />\n      <BottomAction />\n    </div>\n  ) : null;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useProxy } from 'valtio';\nimport styles from './editor.module.css';\nimport { editorContextState, editorState } from './state';\n\nexport const FullScreen = () => {\n  const snapshot = useProxy(editorState);\n  const embed = useRef<any>(null);\n  const div = document.createElement('div');\n  div.style.position = 'absolute';\n  div.style.left = '0';\n  div.style.right = '0';\n  div.style.bottom = '0';\n  div.style.top = '0';\n  const [el] = useState(() => div);\n  const element = editorContextState.gl.domElement;\n\n  useEffect(() => {\n    if (el && embed.current) {\n      document.body.appendChild(el);\n\n      el.appendChild(element);\n      embed.current.appendChild(editorContextState.gl.domElement);\n      return () => {\n        // if (el) document.body.removeChild(el);\n        // unmountComponentAtNode(el);\n      };\n    }\n    return undefined;\n  }, [el, element]);\n\n  // use drag https://codesandbox.io/s/rkgzi?file=/src/index.js\n  return createPortal(\n    <div\n      ref={embed}\n      className={`${styles.embed} ${\n        !snapshot.diffMode && snapshot.fullScreen && snapshot.showEditor\n          ? styles.embedfull\n          : ''\n      }`}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"54\"\n        height=\"14\"\n        viewBox=\"0 0 54 14\"\n      >\n        <g fill=\"none\" fillRule=\"evenodd\" transform=\"translate(1 1)\">\n          <circle\n            cx=\"6\"\n            cy=\"6\"\n            r=\"6\"\n            fill=\"#FF5F56\"\n            stroke=\"#E0443E\"\n            strokeWidth=\".5\"\n          ></circle>\n          <circle\n            cx=\"26\"\n            cy=\"6\"\n            r=\"6\"\n            fill=\"#FFBD2E\"\n            stroke=\"#DEA123\"\n            strokeWidth=\".5\"\n          ></circle>\n          <circle\n            cx=\"46\"\n            cy=\"6\"\n            r=\"6\"\n            fill=\"#27C93F\"\n            stroke=\"#1AAB29\"\n            strokeWidth=\".5\"\n          ></circle>\n        </g>\n      </svg>\n      <div className={styles.embedglass}></div>\n    </div>,\n    el\n  );\n};\n","import React, { FC, VFC, useEffect, useState, useRef, useLayoutEffect } from 'react';\nimport styles from './editor.module.css';\nimport { editorContextState, editorState } from './state';\nimport { editorContext } from '.';\nimport { useProxy } from 'valtio';\nimport { replaceShaderChunks, generateOBc } from './helpers/formatter';\n\nimport Editor, { DiffEditor, loader } from '@monaco-editor/react';\nimport * as shaderLanguage from './cshader';\nimport { EditorTabs } from './components/tabs/tabs';\nimport { Menu } from './components/menu/menu';\nimport { FullScreen } from './fullscreen';\nimport { getNameForEditorMaterial } from './helpers/shaderToMaterial';\nimport Monokai from './helpers/themes/Monokai.json';\n\n// const epoch = Date.now();\n\nexport const checkIfModifications = () => {\n  const oModel = editorContext.monacoRef.editor.getModel(\n    editorState.activeMaterial.model + '_orig'\n  );\n  const mModel = editorContext.monacoRef.editor.getModel(\n    editorState.activeMaterial.model\n  );\n  if (oModel && mModel) {\n    var origin = oModel.getValue();\n    var modif = mModel.getValue();\n  }\n  editorState.activeMaterial.isModif = origin !== modif;\n};\nexport const updateActiveShader = (value: any, type: string) => {\n  if (!editorState.activeMaterial.model) {\n    return\n  }\n  const activeMat = editorContext.activeMaterialRef[editorState.activeMaterial.model]\n  const material: any = activeMat.material;\n\n  editorContext.monacoRef.editor.setModelMarkers(\n    editorContext.editor.getModel(),\n    editorState.activeMaterial.model,\n    value\n  );\n  if (material) {\n    if (material.isEffect) {\n      material.vertexShader = type === 'vert' ? value : material.vertexShader;\n      material.fragmentShader = type === 'frag' ? value : material.fragmentShader;\n      activeMat.effect.recompile(editorContext.gl)\n    } else {\n      material.editorOnBeforeCompile = (shader: any) => {\n        shader.vertexShader = type === 'vert' ? value : material.vertexShader;\n        shader.fragmentShader = type === 'frag' ? value : material.fragmentShader;\n      };\n    }\n \n\n    checkIfModifications();\n    // if (type === 'vert') {\n    //   material.setOption({\n    //     vertexMainOutro: value\n    //   })\n    // } else if (type === 'frag') {\n    //   material.setOption({\n    //     fragmentColorTransform: value\n    //   })\n\n    material.needsUpdate = true;\n    editorState.triggerUpdate++;\n    material.customProgramCacheKey = () => {\n      return editorState.triggerUpdate\n    };\n  }\n};\n\nexport const MaterialEditor: FC = () => {\n  const [instanceReady, setinstanceReady] = useState(false)\n  useLayoutEffect(() => {\n    if (typeof window !== \"undefined\" && !editorContext.monacoRef) {\n      loader\n        .init()\n        .then(monacoInstance => {\n          editorContext.monacoRef = monacoInstance;\n          editorContext.monacoRef.editor.defineTheme('monokai', Monokai);\n          setinstanceReady(true)\n          monacoInstance.languages.register({ id: 'cshader' });\n          monacoInstance.languages.setLanguageConfiguration(\n            'cshader',\n            shaderLanguage.conf\n          );\n          monacoInstance.languages.setMonarchTokensProvider(\n            'cshader',\n            shaderLanguage.language\n          );\n        })\n        .catch(error =>\n          console.error('An error occurred during initialization of Monaco: ', error)\n        );\n    }\n    \n  })\n\n  return <>{instanceReady && <EditorDom />}</>;\n};\n\nconst handleEditorValidation = () => {\n  const diagnostics: any = editorState.diagnostics;\n  if (!editorState.activeMaterial.model) {\n    return\n  }\n  const material: any = editorContext.activeMaterialRef[editorState.activeMaterial.model].material;\n  if (diagnostics && diagnostics.fragmentShader && !diagnostics.runnable && editorContext.monacoRef) {\n    const error =\n      diagnostics.fragmentShader.log === ''\n        ? diagnostics.vertexShader\n        : diagnostics.fragmentShader;\n    const errs: string[] = error.log.split('\\n');\n    // to count the margin\n    const prefix: string[] = error.prefix.split('\\n');\n\n    errs.pop();\n    let errorfromEffectAdjust = 0\n    const markets = errs.map(err => {\n      if (material && material.isEffect && editorContext.editor) {\n        const type = editorState.activeMaterial.type;\n\n        const getVoidEffectLine = type === 'frag' ? `e${material.id}MainImage` : `e${material.id}MainUv`\n        const fullProg = type === 'frag' ? diagnostics.frag : diagnostics.vert\n        const progArr: string[] = fullProg.split('\\n');\n        errorfromEffectAdjust = progArr.findIndex((el) => {\n         return el.includes(getVoidEffectLine)\n        })\n        const model = editorContext.editor.getModel()\n        if (model) {\n          const editorTxtArr: string[] = model.getValue().split('\\n');\n          const getVoidEditorLine = type === 'frag' ? `mainImage` : `mainUv`\n          const adjustUniforms = editorTxtArr.findIndex((el) => {\n            return el.includes(getVoidEditorLine)\n          })\n          errorfromEffectAdjust -= adjustUniforms\n        }\n      }\n\n      const re = new RegExp('[^0-9]+ ([0-9]+):([0-9]+):');\n      const rl: any = err.match(re) || [];\n\n      const message = err.split(':');\n      message[2] = (parseInt(message[2]) - (material.isEffect ? errorfromEffectAdjust : prefix.length) || '').toString();\n\n      const pos = parseInt(rl[1] || 1);\n      const lin = parseInt(rl[2] || 1) - (material.isEffect ? errorfromEffectAdjust : prefix.length);\n      return {\n        startLineNumber: lin,\n        startColumn: pos,\n        endLineNumber: lin,\n        endColumn: 1000,\n        message: message.join(':'),\n        severity: editorContext.monacoRef.MarkerSeverity.Error,\n      };\n    });\n    editorContext.monacoRef.editor.setModelMarkers(\n      editorContext.editor.getModel(),\n      editorState.activeMaterial.model,\n      markets\n    );\n  }\n};\nexport const HandleError = () => {\n  const snapshot = useProxy(editorState);\n\n  useEffect(() => {\n    // const diagnostics: any = snapshot.diagnostics\n    // if (diagnostics && diagnostics.fragmentShader && !diagnostics.runnable) {\n    handleEditorValidation();\n    // }\n  }, [snapshot.diagnostics]);\n  return null;\n};\n\nconst EditorDom = () => {\n  const dom = useRef(null);\n  const snapshot = useProxy(editorState);\n  editorContext.dom = dom;\n\n  return (\n    <div\n      ref={dom}\n      className={`${styles.editor_c} ${\n        snapshot.showEditor ? '' : styles.editor_h\n      } ${snapshot.showEditor && snapshot.fullScreen ? styles.full : ''} ${\n        editorState.className\n      }`}\n    >\n      <Menu />\n      {editorContextState.gl && <FullScreen />}\n      {snapshot.showEditor && <EditorText />}\n    </div>\n  );\n};\n\nconst EditorEdit = () => {\n  const snapshot = useProxy(editorState);\n  const [isEditorReady, setIsEditorReady] = useState(false);\n\n  function handleEditorDidMount(editor: any, _: any) {\n    editorContext.editor = editor;\n    setIsEditorReady(true);\n  }\n\n  useEffect(() => {\n    // at initialization of any new active material set the 2 models\n    if (editorState.activeMaterial && editorContext.activeMaterialRef && editorContext.monacoRef && editorState.activeMaterial.model) {\n      const type = editorState.activeMaterial.type;\n      const activeMat = editorContext.activeMaterialRef[editorState.activeMaterial.model]\n      if (!activeMat) {\n        return\n      }\n      const material: any = activeMat.material;\n      const program: any = activeMat.program;\n\n      if (isEditorReady && material) {\n        const name = getNameForEditorMaterial(material, program)\n\n        let textContent: string | undefined;\n        if (type === 'frag') {\n          textContent = replaceShaderChunks(material.fragmentShader);\n        } else {\n          textContent = replaceShaderChunks(material.vertexShader);\n        }\n\n        if (\n          !editorContext.monacoRef.editor.getModel(`urn:${name}.${type}_orig`)\n        ) {\n          editorContext.monacoRef.editor.createModel(\n            textContent,\n            'cshader',\n            `urn:${name}.${type}_orig`\n          );\n          // TODO ADD OPTION\n          if (material.type !== 'ShaderMaterial' && material.type !== 'RawShaderMaterial' && !material.isEffect) {\n            editorContext.editor.trigger('fold', 'editor.foldLevel1');\n          }\n        }\n      }\n    }\n  }, [isEditorReady, snapshot.activeMaterial, editorContext.monacoRef]);\n\n  const getText = () => {\n    if (!editorState.activeMaterial.model) {\n      return ''\n    }\n    let textContent: string | undefined;\n    const type = editorState.activeMaterial.type;\n    const model = editorState.activeMaterial.model;\n    const activeMat = editorContext.activeMaterialRef[editorState.activeMaterial.model];\n    if (activeMat) {\n      const program = activeMat.program;\n      const material: any = activeMat.material;\n  \n      if (type === 'frag') {\n        textContent = replaceShaderChunks(material ? material.fragmentShader : program.fragmentShader);\n      } else if (type === 'vert') {\n        textContent = replaceShaderChunks(material ? material.vertexShader : program.vertexShader);\n      }\n    }\n\n    if (model === 'urn:obc_result' && editorState.obcMode) {\n      const result = generateOBc(textContent)\n      if (editorContext.monacoRef.editor.getModel('urn:obc_result')) {\n\n        editorContext.monacoRef.editor.getModel('urn:obc_result').setValue(result)\n      }\n      return result;\n    }\n\n    return textContent;\n  };\n\n  return (\n    <Editor\n      className={styles.editor}\n      language=\"cshader\"\n      theme={'vs-dark'}\n      onMount={handleEditorDidMount}\n      height={'100%'}\n      keepCurrentModel={true}\n      path={snapshot.activeMaterial.model + ''}\n      defaultLanguage={\n        snapshot.activeMaterial.model === 'urn:obc_result'\n          ? 'javascript'\n          : 'cshader'\n      }\n      defaultValue={getText()}\n      onChange={frag => {\n        if (editorState.obcMode) {\n          return false;\n        }\n        updateActiveShader(frag, snapshot.activeMaterial.type);\n        return false;\n      }}\n      // onValidate={handleEditorValidation}\n      options={{\n        formatOnType: true,\n        foldingHighlight: false,\n        folding: true,\n        foldingStrategy: 'auto'\n      }}\n    />\n  );\n};\n\nconst GetDiff = () => {\n  const model: any = editorState.activeMaterial.model;\n  const [isEditorReady, setIsEditorReady] = useState(false);\n\n  function handleEditorDidMount(editor: any, _: any) {\n    editorContext.diffEditor = editor;\n    setIsEditorReady(true);\n  }\n\n  var originalModel = editorContext.monacoRef.editor.getModel(model + '_orig');\n  var modifiedModel = editorContext.monacoRef.editor.getModel(model);\n\n  useEffect(() => {\n    if (isEditorReady) {\n      if (!editorContext.monacoRef.editor.getModel('diff_1')) {\n        editorContext.monacoRef.editor.createModel(\n          originalModel.getValue(),\n          'cshader',\n          `diff_1`\n        );\n      }\n      if (!editorContext.monacoRef.editor.getModel('diff_2')) {\n        editorContext.monacoRef.editor.createModel(\n          modifiedModel.getValue(),\n          'cshader',\n          `diff_2`\n        );\n      }\n      editorContext.diffEditor.setModel({\n        original: editorContext.monacoRef.editor.getModel('diff_1'),\n        modified: editorContext.monacoRef.editor.getModel('diff_2'),\n      });\n\n    \n    }\n    return () => {\n      if (\n        editorContext.editor.getModel() &&\n        editorContext.diffEditor.getModel().modified.getValue()\n      ) {\n        // send the update in the diff to the basic text editor\n        editorContext.monacoRef.editor\n          .getModel(editorState.activeMaterial.model)\n          .setValue(editorContext.diffEditor.getModel().modified.getValue());\n      }\n      var navi = editorContext.monacoRef.editor.createDiffNavigator(editorContext.diffEditor, {\n        followsCaret: true, // resets the navigator state when the user selects something in the editor\n        ignoreCharChanges: true // jump from line to line\n      });\n      navi.next()\n    };\n    \n  }, [isEditorReady, modifiedModel, originalModel]);\n\n  return (\n    <DiffEditor\n      className={styles.editor}\n      onMount={handleEditorDidMount}\n      theme={'vs-dark'}\n      height={'100%'}\n      options={{\n        formatOnType: true,\n      }}\n    />\n  );\n};\nconst EditorText: VFC = () => {\n  const snapshot = useProxy(editorState);\n  // implement multi-tab for vertex and frag using createModel\n  return snapshot.showEditor ? (\n    <>\n      {snapshot.activeMaterial.type && (\n        <>\n          <HandleError />\n          <EditorTabs />\n        </>\n      )}\n\n      {Object.keys(snapshot.tabs).length > 0 && <EditorEdit />}\n      {snapshot.showEditor &&\n        snapshot.diffMode &&\n        snapshot.activeMaterial.type && <GetDiff />}\n    </>\n  ) : null;\n};\n\nexport default MaterialEditor;\n","import {\n  getShaderWithObc,\n} from './shaderToMaterial';\nimport * as THREE from 'three'\nimport { editorContextState } from '../state';\n\nexport const addShaderDebugMaterial = (material: any) => {\n  let newMaterial = material;\n  const shader = getShaderWithObc(newMaterial)\n  newMaterial = Object.assign(newMaterial, shader);\n\n  const epoch = Date.now();\n\n  const canvas = editorContextState.gl.domElement;\n  const res = new THREE.Vector2(canvas.clientWidth, canvas.clientHeight)\n  // add a uniform time helper for animations\n  // if (!newMaterial.uniforms.time) {\n  //   newMaterial.uniforms.time = {\n  //     value: 0.0\n  //   }\n  // }\n\n  // wait the first compilation that will inject data into the material shaders\n  setTimeout(() => {\n    newMaterial.onBeforeCompile = function (shader: any) {\n      // troika break if we attribute uniforms\n        // sometimes we lose the uniforms ?\n        // if (!newMaterial.editorAttributeUniforms) {\n        //   newMaterial.editorAttributeUniforms = true\n      if (!newMaterial.postprocess) {\n        shader.uniforms = Object.assign(shader.uniforms, newMaterial.uniforms);\n      }\n        // }\n      // @ts-ignore\n      if (this.editorOnBeforeCompile) {\n        // @ts-ignore\n        this.editorOnBeforeCompile.call(this, shader)\n      }\n      // } else {\n        // override with the editor\n      //   shader.vertexShader = shader.vertexShader;\n      //   shader.fragmentShader = shader.fragmentShader;\n      // }\n  \n      // if time detected in obc or material, automatically update the value\n      if (shader.uniforms.time && !newMaterial.postprocess) {\n        shader.uniforms.time = {\n          writable: true,\n          configurable: true,\n          // @ts-ignore\n          get value() {\n            return (Date.now() - epoch) / 1000;\n          },\n        };\n      }\n      // helper for resolution\n      if (shader.uniforms.resolution) {\n        shader.uniforms.resolution = {\n          writable: true,\n          configurable: true,\n          // @ts-ignore\n          get value() {\n            return res\n          },\n        };\n      }\n    };\n  }, 0);\n  return {\n    debug: null,\n    material: newMaterial,\n  };\n};\n","import { Color, FrontSide, Mesh, MeshBasicMaterial, Scene } from 'three';\nimport { addShaderDebugMaterial } from './helpers/improveMaterial';\nimport { editorState, editorContextState } from './state';\n\nconst getMUIIndex = (muid: string) => muid === 'muidEditor';\n\nconst isAlreadyDerived: any = {};\nconst nativePPisAlreadyDerived: any = [];\n\nlet hasInit = false\n\n\nconst _insertMaterialToEditor = (element: any, container: any, isEffect?: boolean) => {\n  const el = isEffect ? element.screen : element\n  if (!el.material.defines) {\n    el.material.defines = {};\n  }\n\n  if (!el.material.defines.muidEditor) {\n    el.material.defines = Object.assign(el.material.defines || {}, {\n      muidEditor: el.material.id\n    });\n   \n  }\n  const muid = el.material.id;\n  // prevent to derive loop\n  if (\n    muid &&\n    !container[muid] &&\n    el.material.defines\n  ) {\n    const { material } = addShaderDebugMaterial(el.material);\n    el.material = material;\n\n    // to check if multiple material users\n    el.tmeDerived = true;\n    el.material.numberOfMaterialsUser = 1\n    container[muid] = el.material;\n    container[muid].mesh = el;\n    // handle postprocess and react-postprocess libs\n    if (element.effects) {\n      let id = 0\n      for(const effect of element.effects) {\n        effect.id = id++\n        effect.isEffect = true\n      }\n      el.material.postprocess = element\n      element.recompile()\n    }\n  }\n}\n\nconst _insertNativePostProcessToEditor = (el: any, container: any) => {\n  const muid = el.material.id;\n  // prevent to derive loop\n  if (\n    muid &&\n    !container[muid]\n  ) {\n    \n    const { material } = addShaderDebugMaterial(el.material);\n    el.material = material;\n    // to check if multiple material users\n    el.tmeDerived = true;\n    el.material.postprocess = true\n\n    container[muid] = el.material;\n    container[muid].mesh = el;\n  }\n}\n\nconst meshDebugger:any = new Mesh(undefined, new MeshBasicMaterial({\n  color: new Color(0xff0000),\n  side: FrontSide,\n  wireframe: true,\n  visible: false\n}))\nmeshDebugger.debugMaterial = true\n\nexport const traverseMaterialsToProgram = (scene: Scene, gl: any) => {\n  editorContextState.gl = gl;\n\n  if (!hasInit) {\n    hasInit = true\n    // scene.add(meshDebugger)\n  }\n  if (editorContextState.composer) {\n    editorContextState.composer.passes.forEach((pass: any) => {\n      // check if is basic three shaderpass\n      if (pass.fsQuad) {\n        _insertNativePostProcessToEditor(pass, nativePPisAlreadyDerived)\n      }\n\n      // handle postprocess and react-postprocess libs\n      if (pass.screen) {\n        _insertMaterialToEditor(pass, isAlreadyDerived, true)\n      }\n    })\n  }\n  const programs: object[] = [];\n  // update\n  scene?.traverse((el: any) => {\n    // Vanilla return Object3D so (el instanceof Mesh || el instanceof InstancedMesh) doesn't work ?\n    if (el.material) {\n      if (el.debugMaterial) {\n        return\n      }\n      _insertMaterialToEditor(el, isAlreadyDerived)\n      // inc counter if the mesh also use the material\n      if (el.material.defines && !el.tmeDerived) {\n        el.tmeDerived = true;\n        el.material.numberOfMaterialsUser++\n      }\n    }\n  });\n  let iError = 0;\n\n  gl.info.programs?.forEach((program: any) => {\n\n    const cacheKeySplited = program.cacheKey.split(',');\n    // convert and supply all mesh associated to this material to a debugger material\n    const muidDerived = cacheKeySplited[cacheKeySplited.findIndex(getMUIIndex) + 1];\n\n    if (!isNaN(muidDerived) && isAlreadyDerived[muidDerived]) {\n      isAlreadyDerived[muidDerived].program = program\n      if (isAlreadyDerived[muidDerived].postprocess) {\n        for(const effect of isAlreadyDerived[muidDerived].postprocess.effects) {\n          programs.push({\n            material: effect,\n            program: program,\n            effect: isAlreadyDerived[muidDerived].postprocess\n          });\n       };\n      } else {\n        programs.push({\n          material: isAlreadyDerived[muidDerived],\n          program: program,\n        });\n      }\n     \n      \n      if (program) {\n        const programDiagnostic: any = program;\n        if (programDiagnostic.diagnostics) {\n          // if (isAlreadyDerived[muidDerived] && isAlreadyDerived[muidDerived].mesh) {\n          //   if (!meshDebugger.material.visible) {\n          //     meshDebugger.geometry = isAlreadyDerived[muidDerived].mesh.geometry\n          //     meshDebugger.material.visible = true\n          //   }\n          //   meshDebugger.position.copy( isAlreadyDerived[muidDerived].mesh.position );\n          //   meshDebugger.quaternion.copy( isAlreadyDerived[muidDerived].mesh.quaternion );\n          //   meshDebugger.updateMatrix()\n          // }\n\n          editorState.diagnostics = programDiagnostic.diagnostics;\n        \n\n          if (editorState.diagnostics) {\n            const frag = gl.getContext().getShaderSource( programDiagnostic.fragmentShader );\n            const vert = gl.getContext().getShaderSource( programDiagnostic.fragmentShader );\n            editorState.diagnostics.frag = frag\n            editorState.diagnostics.vert = vert\n          }\n          iError++;\n        }\n      }\n   \n    } else {\n      \n      const result = nativePPisAlreadyDerived.filter((e:any) => e.fragmentShader.includes(cacheKeySplited[0]))\n      if (result.length > 0) {\n        result.forEach((pickedMaterial: any) => {\n          programs.push({\n            material: pickedMaterial,\n            program: program\n          });\n        });\n      }\n    }\n  });\n  if (iError === 0) {\n    // meshDebugger.material.visible = false\n  }\n  if (\n    programs.length !== editorContextState.programs.length\n  ) {\n    editorContextState.programs = programs;\n    editorState.triggerUpdate++;\n  }\n};\n","import React, { VFC } from 'react';\nimport { MaterialEditor } from './editor';\nimport { traverseMaterialsToProgram } from './middleware';\nimport { editorState as state, editorContextState } from './state';\n\ninterface Props {\n  className?: any;\n  position?: string | undefined;\n}\n/**\n * Core components\n */\nexport let EditorDom: VFC<Props> = () => null;\nexport let editorState: any = {};\nexport let editorContext: any = {};\nexport let materialsToProgram: any = {};\n\nif (process.env.NODE_ENV === 'production' && process.env.TME_PROD !== 'SHOW') {\n} else {\n  EditorDom = () => {\n    return <MaterialEditor />;\n  };\n  editorState = state;\n  editorContext = editorContextState;\n  materialsToProgram = traverseMaterialsToProgram;\n}\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","editorState","proxy","className","showMenu","showEditor","showUniforms","fullScreen","diffMode","obcMode","length","triggerUpdate","scene","composer","materials","diagnostics","tabs","activeMaterial","open","model","cachedModel","isModif","cache","vert","frag","devtools","editorContextState","activeMaterialRef","programs","editorWidth","editorMinusHeight","gl","commentedIncludeRegExp","includeRegExp","replaceShaderChunks","code","replaceAll","_substring","_indent","name","chunk","ShaderChunk","split","map","line","join","_formatToObc","trim","filter","el","conf","comments","lineComment","blockComment","brackets","autoClosingPairs","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","typeKeywords","operators","symbols","escapes","integersuffix","floatsuffix","encoding","tokenizer","root","next","cases","include","whitespace","comment","doccomment","string","raw","EditorTabs","snapshot","useProxy","React","styles","Object","entries","key","value","replace","onClick","checkIfModifications","setActive","IoImageOutline","IoCubeOutline","IoCloseOutline","keys","lastKey","pop","closeTab","MATERIAL_TYPES_TO_SHADERS","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getNameForEditorMaterial","material","programGl","isEffect","toLowerCase","getTypeForMaterial","id","LiMenu","program","editorContext","monacoRef","oModel","editor","getModel","mModel","getValue","getModif","SubMenu","useState","set","e","stopPropagation","RiArrowDownSFill","RiArrowRightSFill","numberOfMaterialsUser","VscSettings","visible","IoEyeOutline","IoEyeOffOutline","enabled","needsUpdate","fragmentShader","vertexShader","HeadMenu","BiDockRight","AiOutlineFullscreen","BsArrowBarRight","BsArrowBarLeft","BottomAction","isShader","activeMat","trigger","HiOutlineClipboardCopy","VscCompareChanges","setTimeout","AiOutlineFunction","setValue","BiEraser","color","THREE","UniformsMenu","store","setSelection","uniforms","filteredItems","size","forEach","uniform","isNativeUniforms","min","max","image","copyRef","currentSrc","isColor","col","r","g","b","Math","round","Leva","fill","flat","hideTitleBar","oneLineLabels","LevaPanel","UniformComp","loadTexture","materialUniform","preventDouble","load","x","wrapS","wrapT","isOriginal","setUniformValue","useCreateStore","elements","useControls","useEffect","val","get","setRGB","Menu","editorHeight","bind","useDrag","delta","mx","my","down","window","innerWidth","dom","current","setProperty","touchAction","toString","FullScreen","embed","useRef","div","position","left","right","bottom","top","element","domElement","body","createPortal","xmlns","width","height","viewBox","fillRule","transform","cx","cy","stroke","strokeWidth","origin","modif","MaterialEditor","instanceReady","setinstanceReady","useLayoutEffect","loader","init","then","monacoInstance","defineTheme","Monokai","languages","register","setLanguageConfiguration","shaderLanguage","setMonarchTokensProvider","error","console","EditorDom","HandleError","runnable","log","errs","prefix","errorfromEffectAdjust","markets","err","getVoidEffectLine","progArr","findIndex","includes","editorTxtArr","getVoidEditorLine","adjustUniforms","re","rl","match","message","parseInt","pos","lin","startLineNumber","startColumn","endLineNumber","endColumn","severity","MarkerSeverity","Error","setModelMarkers","handleEditorValidation","EditorText","EditorEdit","isEditorReady","setIsEditorReady","textContent","createModel","Editor","theme","onMount","_","keepCurrentModel","path","defaultLanguage","defaultValue","result","_code","base","edited","Map","index","onBeforeCompileFunction","valueFormated","generateOBc","getText","onChange","effect","recompile","editorOnBeforeCompile","shader","customProgramCacheKey","updateActiveShader","options","formatOnType","foldingHighlight","foldingStrategy","GetDiff","originalModel","modifiedModel","diffEditor","setModel","original","modified","createDiffNavigator","followsCaret","ignoreCharChanges","DiffEditor","addShaderDebugMaterial","newMaterial","builtinType","dummyShaderLib","assign","ShaderLib","obcAdded","onBeforeCompile","call","getShaderWithObc","epoch","Date","now","canvas","res","clientWidth","clientHeight","postprocess","this","time","writable","configurable","resolution","debug","getMUIIndex","muid","isAlreadyDerived","nativePPisAlreadyDerived","_insertMaterialToEditor","container","screen","defines","muidEditor","tmeDerived","mesh","effects","Mesh","undefined","Color","side","FrontSide","wireframe","debugMaterial","exports","process","env","TME_PROD","state","materialsToProgram","passes","pass","fsQuad","_insertNativePostProcessToEditor","traverse","info","cacheKeySplited","cacheKey","muidDerived","isNaN","push","programDiagnostic","getContext","getShaderSource","pickedMaterial"],"mappings":"giBAAA,SAASA,EAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,QACxBC,EAAWD,EAAIC,YAEdF,GAA2B,oBAAbG,cAEfC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,+iGCMvC,IAAMe,EAAcC,QAAa,CACtCC,UAAW,GACXC,UAAU,EACVC,YAAY,EACZC,cAAc,EACdC,YAAY,EACZC,UAAU,EACVC,SAAS,EACTC,OAAQ,EACRC,cAAe,EACfC,MAAO,KACPC,SAAU,KACVC,UAAW,GACXC,YAAa,GACbC,KAAM,GACNC,eAAgB,CACdvB,KAAM,GACNwB,MAAM,EACNC,MAAO,KACPC,YAAa,KACbC,SAAS,EACTC,MAAO,CACLC,KAAM,GACNC,KAAM,OAIZC,WAASxB,EAAa,mBAMtB,IAAayB,EAA0B,CACrCZ,UAAW,GACXa,kBAAmB,GACnBC,SAAU,GACVC,YAAa,IACbC,kBAAmB,EACnBC,GAAI,MC9DOC,EAA8B,0CAE9BC,EAAqB,qCCHrBC,EAAsB,SAACC,MACd,iBAATA,SAGIA,EAAKC,WAClBH,GACA,SAACI,EAAiBC,EAAcC,OAC1BC,EAAQC,cAAYF,yBAGDA,WAFvBC,EAAQA,EAAME,MAAM,MAAMC,KAAI,SAAAC,UAAQA,KAAMC,2BAQ5CC,EAAe,SAACX,MACA,iBAATA,SAGWA,EACnBC,WACCJ,GACA,SAACK,EAAiBC,EAAcC,sBACVA,SAGvBQ,OAE0BL,MAAMT,GAEbe,QAAO,SAASC,SACtB,KAAPA,MC3BEC,EAAmC,CAC9CC,SAAU,CACRC,YAAa,KACbC,aAAc,CAAC,KAAM,OAEvBC,SAAU,CACR,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAERC,iBAAkB,CAChB,CAAErC,KAAM,IAAKsC,MAAO,KACpB,CAAEtC,KAAM,IAAKsC,MAAO,KACpB,CAAEtC,KAAM,IAAKsC,MAAO,KACpB,CAAEtC,KAAM,IAAKsC,MAAO,IAAKC,MAAO,CAAC,SAAU,YAC3C,CAAEvC,KAAM,IAAKsC,MAAO,IAAKC,MAAO,CAAC,YAEnCC,iBAAkB,CAChB,CAAExC,KAAM,IAAKsC,MAAO,KACpB,CAAEtC,KAAM,IAAKsC,MAAO,KACpB,CAAEtC,KAAM,IAAKsC,MAAO,KACpB,CAAEtC,KAAM,IAAKsC,MAAO,KACpB,CAAEtC,KAAM,IAAKsC,MAAO,MAEtBG,QAAS,CACPC,QAAS,CACPC,MAAO,IAAIC,OAAO,6BAClBC,IAAK,IAAID,OAAO,mCAKTE,EAAW,CACtBC,aAAc,GACdC,aAAc,OAEdZ,SAAU,CACR,CAAEa,MAAO,kBAAmBjD,KAAM,IAAKsC,MAAO,KAC9C,CAAEW,MAAO,wBAAyBjD,KAAM,IAAKsC,MAAO,KACpD,CAAEW,MAAO,mBAAoBjD,KAAM,IAAKsC,MAAO,KAC/C,CAAEW,MAAO,kBAAmBjD,KAAM,IAAKsC,MAAO,MAGhDY,SAAU,CACR,UACA,SACA,aACA,UACA,YACA,UACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,WACA,MACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,eACA,YACA,aACA,WACA,MACA,WACA,UACA,WACA,SACA,KACA,SACA,eACA,OACA,OACA,OACA,QACA,WACA,SACA,SACA,QACA,QACA,UACA,QACA,MACA,SACA,QACA,UACA,OACA,KACA,KACA,WACA,SACA,MACA,YACA,eACA,WACA,UACA,OACA,UACA,YACA,MACA,WACA,UACA,YACA,WACA,WACA,UACA,SACA,UACA,UACA,WACA,YACA,SACA,MACA,WACA,mBACA,WACA,SACA,YACA,SACA,QACA,SACA,SACA,SACA,gBACA,cACA,SACA,SACA,WACA,OACA,eACA,QACA,cACA,OACA,MACA,UACA,SACA,WACA,QACA,WACA,QACA,UACA,OACA,WACA,UACA,QACA,SAGFC,aAAc,4JAA4J3B,MACxK,OAGF4B,UAAW,CACT,IACA,IACA,I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"}