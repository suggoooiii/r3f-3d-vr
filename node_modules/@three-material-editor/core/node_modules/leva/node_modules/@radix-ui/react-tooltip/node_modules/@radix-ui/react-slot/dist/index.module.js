import{composeRefs as e}from"@radix-ui/react-compose-refs";import{composeEventHandlers as t}from"@radix-ui/primitive";import*as r from"react";function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e}).apply(this,arguments)}export const Slot=r.forwardRef(((e,t)=>{const{children:l,...i}=e;return 1===r.Children.count(l)?r.createElement(n,o({},i,{ref:t}),l):r.createElement(r.Fragment,null,r.Children.map(l,(e=>r.isValidElement(e)&&e.type===Slottable?r.createElement(n,o({},i,{ref:t}),e.props.children):e)))}));Slot.displayName="Slot";const n=r.forwardRef(((t,o)=>{const{children:n,...i}=t,a=r.Children.only(n);return r.isValidElement(a)?r.cloneElement(a,{...l(i,a.props),ref:e(o,a.ref)}):null}));n.displayName="SlotClone";export const Slottable=({children:e})=>e;function l(e,r){const o={...r};for(const n in r){const l=e[n],i=r[n];/^on[A-Z]/.test(n)&&(o[n]=t(i,l))}return{...e,...o}}export const Root=Slot;
//# sourceMappingURL=index.module.js.map
